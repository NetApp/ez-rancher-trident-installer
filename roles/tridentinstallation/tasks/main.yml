---
- name: Check for Existing Trident Deployments
  shell: "kubectl get deployment trident-operator -n {{ meta.namespace }} --no-headers=1"
  register: check_trident_ds
  failed_when: "'6443' in check_trident_ds.stderr_lines"

- debug: 
    var: check_trident_ds.stdout_lines

- name: Deploy CRDs
  k8s:
    definition: "{{ lookup('file', '/trident-installer/deploy/crds/trident.netapp.io_tridentprovisioners_crd_post1.16.yaml') }}"
  register: k8s_crd_result
  when: check_trident_ds.stdout_lines | length == 0

- name: Deploy Stack
  k8s:
    definition: "{{ lookup('file', '/trident-installer/deploy/bundle.yaml') }}"

- name: Deploy Provisioner
  k8s:
    definition: "{{ lookup('file', '/trident-installer/deploy/crds/tridentprovisioner_cr.yaml') }}"

- name: Wait for trident-operator ready
  shell: kubectl wait deployment/trident-operator --for condition=available -n trident

- name: Wait for CSI pods
  shell: kubectl get pods --no-headers -l app=node.csi.trident.netapp.io -n trident --field-selector=status.phase=Running
  register: csi_ds_result
  until: csi_ds_result.stdout.find("trident") != -1
  retries: 3
  delay: 5
  
- debug:
    var: csi_ds_result

- name: Create Backend File
  template:
    src: trident_backends.json.j2
    dest: /tmp/trident-backends.json

- name: Create backends
  shell: "tridentctl -n {{ meta.namespace }} create backend -f /tmp/trident-backends.json"
  register: create_backends_result

- name: Create StorageClasses
  k8s:
    definition: "{{ lookup('template', 'storageclasses.yaml.j2') }}"
  register: k8s_storageclass_result
